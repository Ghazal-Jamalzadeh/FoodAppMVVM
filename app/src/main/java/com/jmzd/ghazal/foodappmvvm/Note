تویی MVVM فقط از Flow - LiveData - Coroutine استفاده میکنیم چون خیلی خیلی ترکیب خوبی هستن

Server----------------------------------------------------------------------------------------------
هر جا که قبلا اب رتروفیت کار میکردیم و رسپانس را در  قالب Single میگرفتیم اون single پاک میشه و و همون Response دیفالت رتروفیت میشه
برای ترکی با کروتین تمام متدها تبدیل به ساسپند فانکشن میشن

بایندیینگ رو با اون روش جدید میریم که ویوهامون از دسترس خارج شن وقتی باید بشن

Kotlin delegates------------------------------------------------------------------------------------
در مورد این خط کد:
private val viewModel: HomeViewModel by viewModels()
ممکنه بپرسید چرا از inject برای تزریق ویومدل استفاده نمیکنیم مثل بقیه چیزها؟
ما زمانی که داریم از انوتیشن @HiltViewModel در ویومدل استفاده میکنیم
و از کاتلین دلیگیت by viewModels() استفاده میکنیم
خودش اون عملیات تزریق کردن رو برای ما انجام میده
در واقع این الان تزریق شده و من نیومدم از مساوی استفاده کنم

Extensions-------------------------------------------------------------------------------------------
توی پروژه نوت اپ mvp اومدیم برای اسپینرها اکستنشن نوشتیم
اینجا هم میخوایم همون کار رو بکنیم ولی باز جنرال تر و بهینه تر از قبلی
مثلا توی ورودی قبلی لیست استرینگ میگرفتیم توی ورودی
الان میخوایم دیتاتایپ مشخصی ندیم بهش
لایه های اختصاصی تری هم داره اسپینر فود اپ نسبت به نوت اپ که از پیش فرض ها استفاده میکنه

ورودی ها:
نیاز به یک لیست از آیتم ها داریم
همچنین نیاز به یک کال بک داربم که بفهمیم کدام آیتم سلکت شده

list: MutableList<out Any>
لیست را به این شکل تعریف میکنیم
هر دیتاتایپی را قول میکنه الان. از جمله:
string - int - char - double ....
[فکر کنم فقط دیتا تایپ های اصلی را قبول میکنه و فرقش با جنریک اینه. شایدم فرقی نداره؟]

callback: (String) -> Unit

flatten--------------------------------------------------------------------------------------------
   /*
        * نکته کاتلینی:
        * ما یک لیست نیاز داریم که حروف a تا z داخلش باشه ولی نمیخوایم دستی بنویسیم
        * listOf('A'..'Z')
        * اگر این را بنویسیم خروجی به شکل زیر خواهد بود:
        * a z (یک آیتم)
        * ولی ما میخوایم خروجی به شکل زیر باشه
        * a
        * b
        * c
        * ...
        * z
        * (آیتم های جدا از هم)
        * .flatten()
        * ابن کار را برای ما انجام میده و لیست را به ترتیب میسازه
        * */
        val filters = listOf('A'..'Z').flatten()

Recycler View Extensions---------------------------------------------------------------------------------
نکات اسکرول کردن تو در تو
وقتی چندین ریسایکلر ویو عمودی یا افقی داخل یک اسکرول ویو درون یک صفحه داریم.
باید چه کار کنیم  که اسکرول ها از نظر ux وجهه خوبی داشته باشن و گیج کننده نباشن
وقتایی که میخوایم سایز مشخصی برای لایه ها داشته باشیم
زمانی که میخوایم بین آیتم های ریسایکلر ویو خط بندازیم
انیمیشن اضافه کنیم
برای کد تکراری نزدن در این موارد میایم اکستنشن مینویسیم

خب دو تا چیز حیاتی که برای ریسایکلر ویو میخوایم چیان؟
لایوت منیجر - آداپتر
بقیه چیزا که بالا گفتیم رو بهش ندیم هم مهم نیسست و کار میکنه به هر حال

layout manager:
چه نوع لایوت منیجری نیاز داری؟
لینییر؟ استگرد؟ ورتیکال؟ هاریزنتال؟ اصلا یه لایوت منیجر کاستوم شاید از اینترنت
نمیدونیم.ممکنه هر کدوم باشه
اگه قرار باشه برای هر کدوم از لایوت منیجرا هم یک اکستنشن بنویسیم هم که خب چه کاریه
میخوایم یک چیز جنرال بنویسییم که تو کل اپ به کارمون بیاد
پس دیتا تایپ رو به شکل زیر مشخص میکنیم
RecyclerView.LayoutManager
هر لایوت منیجری به این بدیم قبول میکنه

adapter:
باز من قراره انواع و اقسام اداپتر رو داشته باشم. کدومش رو بدم به اکستنشن؟
اگه قرار باشه برای هر اداپتر یک اکستنشن جدا بنویسم این که نشد جنرال
پس از RecyclerView.Adapter استفاده میکنیم
ولی این توی ورودی یک <ViewHolder> میخواد از من
هر اداپتری هم که ویو هولدر مخصوس خودشو داره
چیکار کنیم حالا؟ چیجور بفهمیم؟
از * استفاده میکنیم
یعنی هر ویوهولدری اومد رو قبول کن
RecyclerView.Adapter<*>

setHasFixedSize :
تکه کد زیر چه زمانی به درد ما میخوره؟
recyclerView.setHasFixedSize(true)
زمانی که اندازه (ارتفاع یا عرض بستگی به ریسایکلر ویومون)
مثلا توی لیست فود اپ صفحه هوم عرض همه آیتم ها یکسان است کل صفحه رو میگیره و ارتفاع کم و زیاد میشه
پس با عرض هیچ کاری ندارم و وارتفاع کم و زیاد میشه و متغیره
اگر ارتفاع ثابت باشه تکه کد بالا را در نظر میگیریم
مثلا توی پروژه نوت ارتفاع ثابت نبود
ممکن بود یک خط باشه یا ۱۰ خط
اونجا نباید از کد بالا استفاده کنیم چون ارتفاع دایم کم و زیاد میشه
ولی اینجا که ارتفاع تمام آیتم های من ثابت است باید true شود
که به ازای هر آیتم یک بار رندری صورت نگیرد برای محاسبه سایز

isNestedScrollingEnabled:
this.isNestedScrollingEnabled = false
اسکرول های تو در تو را false میکنیم
که تو دل هم اسکرول نخورن و با اتمام اسکرول اولی خود به خود دومی اسکرول بخورد

Check Connectivity----------------------------------------------------------------------------------
از همون روشی که توی لایو دیتا یاد گرفتیم میخوایم استفاده کنیم
فقط این بار با di ترکیبش کردیم

کد قبلی و توضیح خط به خط کد از فصل لایو دیتا:
https://github.com/Ghazal-Jamalzadeh/DiffUtils/blob/74-Koin/app/livedata/src/main/java/com/jmzd/ghazal/livedata/network/CheckConnection.kt
https://github.com/Ghazal-Jamalzadeh/DiffUtils/blob/74-Koin/app/livedata/src/main/java/com/jmzd/ghazal/livedata/network/NetworkActivity.kt

اگه کدهای بالا را نگاه کنید
 ما توی فصل لایو دیتا اومدیم کانکتیویتی منیجر را به عنوان ورودی این کلاس گرفتیم
 توی سکندری کانستراکتور کانکتیویتی منیجر رو initialize کردیم بلافاصله

 پس کلاس ما به این ConnectivityManager وابسته هست
 حالا میخوایم این وابستگی رو تامین کنیم با هیلت به جای استفاده از کانسستراکتور

چون این ConnectivityManager کلا باید initialize شود پس باید به صورت ماژول به پروژه اضافه شود حتما
نه که توی کانستراکتور inject شه مثلا
پس میریم توی دایرکتوری di براش یک فایل ایجاد میکنیم
-> OtherModule

@InstallIn(FragmentComponent::class)
/* چون داریم توی فرگمنت ازش استفاده میکنیم*/

@FragmentScoped
چون میخوایم این فانکشنمون در داخل یک فرگمنت اسکوپش ساخته بشه
و وقتی که فرگمنت من از بین رفت و موارد مربوط بلا استثنا شد
لایف سایکلش هم از بین بره

حالا سوال: برای initialize کردن این ConnectivityManager به چه چیزهایی نیاز داریم؟
 به Application یا همون ApplicationContext

مدیریت ui های خالی و ارور و...---------------------------------------------------------------------
 حالا برای مدیریت ui های خالی و پر و قطعی اینترنت و ... میخوایم یک فانکشن واحد بنویسیم
 سه تا وضعیت اصلی داریم
 خالی بودن لیست
 قطعی اینترنت
 اوکی بودن همه چیز

 یک راهش که توی پروژه های قبلی استفاده کردیم استفاده از constants هست
 این دفعه میخوایم از enum استفاده کنیم

 enum class PageState { EMPTY, NETWORK, NONE }

 تعریف enum class :
 ما یک سری حالت های از پیش تعیین شده داریم
 که با توجه به اونا میایم یک وضعیت هایی رو براش ست میکنیم
 توی کاستوم ویوها کاربرد خیلی زیادی دارن

call apis-------------------------------------------------------------------------------------------
زمانی که از صفحه جزییات دکمه بک رو میزنیم و برمیگردیم عقب چیکار کنیم که api های هوم دوباره کال نشوند؟
اگر توی onViewCreated صدا زده باشیم api ها رو این اتفاق می افته
چون موقع برگشتن از یک فرگمنت دیگه این قسمت لایف سایکل اتفاق می افته مجدد

برای جلوگیری از این اتفاق چیکار میتونیم بکنیم؟
میتونیم به جای صدا زدن api ها در خود فرگمنت داخل ویومدل صداشون بزنیم
داخل بلاک init
این بلاک چه زمانی صدا زده میشه؟
زمانی که ویومدل من ساخته میشه
و ویومدل من یک بار ساخته میشه
و حتی توی چرخش صفحه و این ها reCreate نمیشه

youtube player:-------------------------------------------------------------------------------------
یادآوری: توی بخش mvp با جزییات بهتری توضیح داده شده و اینجا صرفا یادآوریه

1- لایبرری رو اضافه میکنیم
2- توی مانیفست دسترسی یوتیو پلیر رو میگیریم
3- توی اکتویتی از YouTubeBaseActivity() ارث بری میکنیم
4- برای استفاده کردن از یوتیوب پلیر توی اکتیویتی به دو تا چیز نیاز داشتیم
۱- private lateinit var player: YouTubePlayer
به خود پلیر نیاز دارم که دسترسی داشته باشم بهش. پلی کنم. initialize ش کنم.
 یا زمانی که صفحه من destroy شد یا از دسترس خارج شد پلیر را خالی کنیم که اون پشت عملیاتی انجام نده
۲- private var videoId = ""
به یک آیدی نیاز داشتم
5- کد مربوط به فول اسکرین کردن صفحه رو میزنم
ممکنه کد منسوخ باشه ولی تضمینی کار میکنه.
چون روش های جدیدتر روی بعضی از دستگاه های شیاءومی و هواوی به مشکل میخورن و کرش میکنه.
نکته مهم:
این کد باید قبل از setContentView نوشته شه. چرا؟
چون setContentView میاد لایه ما رو initialize میکنه و میسازه
وقتی ساخته شه دیگه چجوری میخوای بیای استاتوسش رو حذف کنی و فلگ های جدید ست کنی روش و ....
6- آیدی رو از اینتنت میگیریم
7- پلیر رو initialize میکنیم
binding.videoPlayer.initialize(YOUTUBE_API_KEY, listener)
که نیاز به اون کلیدی داره که از کنسول گرفتیم و آموزشش توی mvp هست
دومین چیزی که نیاز داره listener هست که به واسطه اون بیاد پلیر رو بسازه

bug fixing------------------------------------------------------------------------------------------
باگ: زمانی که به یوتیوب پلیر اکتیویتی می رویم موقع برگشت به هوم اپ کرش میکند
چرا؟
چون توی onStop بایندینگ MainActivity را null کردیم
و زمانی که به یک اکتیویتی جدید میرویم این بخش از لایف سایکل کال میشود

وقتی برمیگردیم null است و اپ کرش میکنه
 اگه هزاران فرگمنت رو اجرا کنیم و بک بزنیم هندل میشه و مشکلی نیست. ولی اکتیویتی مشکل سازه

 راه حل:
 نال کردن بایندینگ رو در onDestroy انجام میدیم که مطمعن باشیم دیکه ویو در دسترس نیست

 پس موقع نال کردن ویو خیلی حواستون به چرخه حیات باشه که جایی نالش کنید که واقعا از دسترس خارج میشه
